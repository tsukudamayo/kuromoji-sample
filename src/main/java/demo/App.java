/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;

import com.atilika.kuromoji.ipadic.Token;
import com.atilika.kuromoji.ipadic.Tokenizer;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    private static List<String> parseTargetColumn() {
        System.out.println("***************************** parseTargetColumn ***************************");
        long startTime = System.nanoTime();
        BufferedReader buffReader = null;
        List<String> titleList = new ArrayList<>();
        int row = 0;
        try {
            FileInputStream fileInput = new FileInputStream("sample.csv");
            try {
                InputStreamReader inputStream = new InputStreamReader(fileInput, "UTF-8");
                buffReader = new BufferedReader(inputStream);
            } catch (UnsupportedEncodingException e) {
                System.err.println(e);
            }
            String currentContent;
            String[] arrayColumnName = null;
            while((currentContent = buffReader.readLine()) != null) {
                buffReader.readLine();
                if (row == 0) {
                    arrayColumnName = currentContent.split(",");
                } else {
                    int arrayNumber = 3;
                    String[] arrayColumnData = currentContent.split(",");
                    String titleColumn = arrayColumnData[arrayNumber];
                    titleList.add(titleColumn);
                }
                row++;
            }
        } catch (FileNotFoundException e) {
            System.err.println(e);
        } catch (IOException e) {
            System.err.println(e);
        }
        long endTime = System.nanoTime();
        System.out.println("================================ " + ((endTime - startTime) / 1000) + " =======================");
        return titleList;
    }

    public static List<String> tokenizeStrings(String strings, Tokenizer tokenizer) {
        long startTime = System.nanoTime();
        System.out.println("title : " + strings);
        List<Token> tokens = tokenizer.tokenize(strings);
        List<String> candidate = new ArrayList<>();
        for (Token token : tokens) {
            List<String> features = Arrays.asList(token.getAllFeatures().split(","));
            String pos = features.get(0);
            if ((pos.equals("名詞")) || (pos.equals("動詞")) || (pos.equals("副詞")) || (pos.equals("形容詞"))) {
                candidate.add(token.getSurface());
            }
        }
        long endTime = System.nanoTime();
        System.out.println("================================ " + ((endTime - startTime) / 1000) + " =======================");
        return candidate;
    }

    public static ArrayList<List<String>> generatePOS2DArray(List<String> titles) {
        System.out.println("************************** generatePOS2DArray **********************");
        ArrayList<List<String>> tagList = new ArrayList<List<String>>();
        Tokenizer tokenizer = new Tokenizer();
        int count = 0;
        for (String title : titles) {
            List<String> tags = tokenizeStrings(title, tokenizer);
            tagList.add(tags);
            System.out.println(count);
            count++;
        }
        return tagList;
    }

    public static void exportCSV(List<String> titles, ArrayList<List<String>> tags) {
        System.out.println("************************** exportCSV ***************************");
        long startTime = System.nanoTime();
        try {
            FileWriter f = new FileWriter("tag.csv", false);
            PrintWriter p = new PrintWriter(new BufferedWriter(f));

            for (int i = 0; i < titles.size(); ++i) {
                System.out.println(titles.get(i));
                p.print(titles.get(i));
                List<String> tag = tags.get(i);
                System.out.println(tag);
                for (int j = 0; j < tag.size(); j++) {
                    p.print(",");
                    p.print(tag.get(j));
                }
                p.println();
            }
            p.close();
        } catch (IOException e) {
            System.err.println(e);
        }
        long endTime = System.nanoTime();
        System.out.println("================================ " + ((endTime - startTime) / 1000) + " =======================");
    }

    public static void main(String[] args) {
        List<String> title = parseTargetColumn();
        ArrayList<List<String>> tagList = generatePOS2DArray(title);
        exportCSV(title, tagList);
    }
}
